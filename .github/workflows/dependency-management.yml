name: Dependency Management

on:
  workflow_dispatch:
    inputs:
      group:
        description: 'Dependency groupId'
        required: true
      artifact:
        description: 'Dependency artifactId'
        required: true
      version:
        description: 'Dependency version'
        required: true

jobs:
  manage-dependency:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up JDK
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '11'  # Specify Java version

    - name: Download Dependency
      run: |
        mvn dependency:get -Dartifact=${{ github.event.inputs.group }}:${{ github.event.inputs.artifact }}:${{ github.event.inputs.version }}
        # Manually transform groupId to file path
        GROUP_PATH=$(echo ${{ github.event.inputs.group }} | tr '.' '/')
        echo "GROUP_PATH=$GROUP_PATH" >> $GITHUB_ENV
      env:
        MAVEN_OPTS: "-Dmaven.repo.local=./m2"

    - name: Scan for Vulnerabilities
      run: |
        wget https://github.com/jeremylong/DependencyCheck/releases/download/v10.0.0/dependency-check-10.0.0-release.zip
        unzip dependency-check-10.0.0-release.zip
        export PATH=$PATH:$(pwd)/dependency-check/bin
        dependency-check.sh --scan ./m2/$GROUP_PATH/${{ github.event.inputs.artifact }}/${{ github.event.inputs.version }}/ 
      continue-on-error: true

    # - name: Sign Dependency
    #   run: |
    #     echo "${{ secrets.GPG_PRIVATE_KEY }}" | gpg --import
    #     gpg --list-secret-keys
    #     gpg --batch --yes --armor --output signed-${{ github.event.inputs.artifact }}-${{ github.event.inputs.version }}.asc --detach-sig ./m2/$GROUP_PATH/${{ github.event.inputs.artifact }}/${{ github.event.inputs.version }}/${{ github.event.inputs.artifact }}-${{ github.event.inputs.version }}.jar
    #   env:
    #     GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
    #     GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}

    - name: debug
      run: |
        echo $MAVEN_USERNAME
      env:
        MAVEN_USERNAME: ${{ github.actor }}
    
    - name: Configure Maven for GitHub Packages
      run: |
        mkdir -p ~/.m2
        echo "<settings><servers><server><id>github</id><username>${{ github.actor }}</username><password>${{ secrets.GH_TOKEN }}</password></server></servers></settings>" > ~/.m2/settings.xml

    - name: Publish to GitHub Packages
      run: |
        mvn deploy:deploy-file -DgroupId=${{ github.event.inputs.group }} -DartifactId=${{ github.event.inputs.artifact }} -Dversion=${{ github.event.inputs.version }} -Dpackaging=jar -Dfile=./m2/$GROUP_PATH/${{ github.event.inputs.artifact }}/${{ github.event.inputs.version }}/${{ github.event.inputs.artifact }}-${{ github.event.inputs.version }}.jar -DrepositoryId=github -Durl=https://maven.pkg.github.com/barath-tw/test-dependency-management
      env:
        MAVEN_USERNAME: ${{ github.actor }}
        MAVEN_PASSWORD: ${{ secrets.GH_TOKEN }}
